snippet case
	case ${1:var} do
		${2:condition1} -> ${3:action1}
		_ -> ${4:other}
	end
snippet cond
	cond do
		${1:condition1} -> ${2:action1}
		true -> ${3:other}
	end
snippet d
	def ${1:function} do
		${2}
	end
snippet dm
	defmodule ${1:ModuleName} do
		${2}
	end
snippet dp
	defp ${1:function} do
		${2}
	end
snippet map
	Enum.map(${1:list}, fn e -> ${2:action} end)
snippet puts
	IO.puts ${1}
